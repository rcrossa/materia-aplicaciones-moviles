{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Roberto Rossa\\\\Documents\\\\GitHub\\\\materia-aplicaciones-moviles\\\\TerceraEntrega\\\\bp-StackNavigator-RN-main\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { HomeScreen } from \"./Screens/HomeScreen\";\nimport { DetailsScreen } from \"./Screens/DetailsScreen\";\nimport Login from \"./Screens/LoginScreen\";\nimport { firebaseConfig } from \"./Screens/firebase\";\nimport withFirebaseAuth from 'react-with-firebase-auth';\nvar Stack = createStackNavigator();\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          user = _this$props.user,\n          signOut = _this$props.signOut,\n          signInWithGoogle = _this$props.signInWithGoogle;\n      return React.createElement(NavigationContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 7\n        }\n      }, React.createElement(Stack.Navigator, {\n        initialRouteName: \"Login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }\n      }, !user ? React.createElement(Stack.Screen, {\n        name: \"Login\",\n        component: Login,\n        options: {\n          title: \"Login\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }\n      }) : React.createElement(React.Fragment, null, React.createElement(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen,\n        options: {\n          title: \"Inicio\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Details\",\n        component: DetailsScreen,\n        options: {\n          title: \"Detalles\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };","map":{"version":3,"sources":["C:/Users/Roberto Rossa/Documents/GitHub/materia-aplicaciones-moviles/TerceraEntrega/bp-StackNavigator-RN-main/App.js"],"names":["React","Component","NavigationContainer","createStackNavigator","HomeScreen","DetailsScreen","Login","firebaseConfig","withFirebaseAuth","Stack","App","props","user","signOut","signInWithGoogle","title"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AAGA,SAAQC,UAAR;AACA,SAAQC,aAAR;AACA,OAAOC,KAAP;AACA,SAAQC,cAAR;AACA,OAAOC,gBAAP,MAA6B,0BAA7B;AACA,IAAMC,KAAK,GAAGN,oBAAoB,EAAlC;;IAGqBO,G;;;;;;;;;;;;;6BAEX;AAAA,wBACqC,KAAKC,KAD1C;AAAA,UACEC,IADF,eACEA,IADF;AAAA,UACQC,OADR,eACQA,OADR;AAAA,UACiBC,gBADjB,eACiBA,gBADjB;AAEN,aACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,SAAP;AAAiB,QAAA,gBAAgB,EAAC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,CAACF,IAAD,GACG,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,OAAnB;AAA2B,QAAA,SAAS,EAAEN,KAAtC;AAA6C,QAAA,OAAO,EAAE;AAACS,UAAAA,KAAK,EAAC;AAAP,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,GAGG,0CACE,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,MAAnB;AAA0B,QAAA,SAAS,EAAEX,UAArC;AAAiD,QAAA,OAAO,EAAE;AAACW,UAAAA,KAAK,EAAC;AAAP,SAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,SAAnB;AAA6B,QAAA,SAAS,EAAEV,aAAxC;AAAuD,QAAA,OAAO,EAAE;AAACU,UAAAA,KAAK,EAAC;AAAP,SAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAJJ,CADF,CADF;AAcD;;;;EAlB8Bd,S;;SAAZS,G","sourcesContent":["import React, {Component} from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\n// Screens\nimport {HomeScreen} from \"./Screens/HomeScreen\";\nimport {DetailsScreen} from \"./Screens/DetailsScreen\";\nimport Login from \"./Screens/LoginScreen\";\nimport {firebaseConfig} from './Screens/firebase';\nimport withFirebaseAuth from 'react-with-firebase-auth';\nconst Stack = createStackNavigator();\n\n\nexport default class App extends Component {\n\n  render(){\n    const { user, signOut, signInWithGoogle} = this.props;\n    return (\n      <NavigationContainer>\n        <Stack.Navigator initialRouteName=\"Login\">\n        {!user ? (\n            <Stack.Screen name=\"Login\" component={Login} options={{title:\"Login\"}}/>\n          ) : (\n            <>\n              <Stack.Screen name=\"Home\" component={HomeScreen} options={{title:\"Inicio\"}}/>\n              <Stack.Screen name=\"Details\" component={DetailsScreen} options={{title:\"Detalles\"}}/>\n            </>\n          )}\n        </Stack.Navigator>\n      </NavigationContainer>\n    );\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}