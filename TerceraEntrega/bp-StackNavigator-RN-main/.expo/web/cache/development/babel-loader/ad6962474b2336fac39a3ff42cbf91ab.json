{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Roberto Rossa\\\\Documents\\\\GitHub\\\\materia-aplicaciones-moviles\\\\TerceraEntrega\\\\bp-StackNavigator-RN-main\\\\Screens\\\\login.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport firebase from 'firebase';\nimport withFirebaseAuth from 'react-with-firebase-auth';\nimport firebaseConfig from \"./firebase\";\nvar firebaseApp = firebase.initializeApp(firebaseConfig);\n\nvar Login = function (_Component) {\n  _inherits(Login, _Component);\n\n  var _super = _createSuper(Login);\n\n  function Login() {\n    _classCallCheck(this, Login);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          user = _this$props.user,\n          SignOut = _this$props.SignOut,\n          SignInWithGoogle = _this$props.SignInWithGoogle;\n      return React.createElement(\"view\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }\n      }, user ? React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 26\n        }\n      }, \"Hello,  \", user.displayName) : React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }\n      }, \"Please, Sign in\"), user ? React.createElement(Button, {\n        onPress: SignOut,\n        title: \"Sign Out\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 30\n        }\n      }) : React.createElement(Button, {\n        onPress: SignInWithGoogle,\n        title: \"Sign in With\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }\n      }));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nvar firebaseAppAuth = firebaseApp.auth();\nvar providers = {\n  googleProvider: new firebase.auth.GoogleAuthProvider()\n};\nexport default withFirebaseAuth({\n  providers: providers,\n  firebaseAppAuth: firebaseAppAuth\n})(Login);","map":{"version":3,"sources":["C:/Users/Roberto Rossa/Documents/GitHub/materia-aplicaciones-moviles/TerceraEntrega/bp-StackNavigator-RN-main/Screens/login.js"],"names":["React","Component","firebase","withFirebaseAuth","firebaseConfig","firebaseApp","initializeApp","Login","props","user","SignOut","SignInWithGoogle","displayName","firebaseAppAuth","auth","providers","googleProvider","GoogleAuthProvider"],"mappings":";;;;;;;;;;;AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;;;AAGA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,gBAAP,MAA6B,0BAA7B;AACA,OAAOC,cAAP;AAEA,IAAMC,WAAW,GAAIH,QAAQ,CAACI,aAAT,CAAuBF,cAAvB,CAArB;;IAEMG,K;;;;;;;;;;;;;6BACM;AAAA,wBACuC,KAAKC,KAD5C;AAAA,UACIC,IADJ,eACIA,IADJ;AAAA,UACUC,OADV,eACUA,OADV;AAAA,UACmBC,gBADnB,eACmBA,gBADnB;AAEJ,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACMF,IAAI,GAAG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACKA,IAAI,CAACG,WADV,CAAH,GAEF,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAHR,EAMUH,IAAI,GAAG,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAEC,OAAjB;AAA0B,QAAA,KAAK,EAAC,UAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,GACF,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAEC,gBAAjB;AAAmC,QAAA,KAAK,EAAC,cAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPZ,CADJ;AAYH;;;;EAfeV,S;;AAkBpB,IAAMY,eAAe,GAAGR,WAAW,CAACS,IAAZ,EAAxB;AACA,IAAMC,SAAS,GAAG;AACdC,EAAAA,cAAc,EAAE,IAAId,QAAQ,CAACY,IAAT,CAAcG,kBAAlB;AADF,CAAlB;AAGA,eAAed,gBAAgB,CAAC;AAC5BY,EAAAA,SAAS,EAATA,SAD4B;AAE5BF,EAAAA,eAAe,EAAfA;AAF4B,CAAD,CAAhB,CAGZN,KAHY,CAAf","sourcesContent":["\r\nimport React, {Component} from 'react';\r\nimport {View, TextInput, Text, Button} from \"react-native\";\r\nimport {StyleSheet} from \"react-native\";\r\nimport firebase from 'firebase';\r\nimport withFirebaseAuth from 'react-with-firebase-auth'\r\nimport firebaseConfig from './firebase';\r\n\r\nconst firebaseApp =  firebase.initializeApp(firebaseConfig);\r\n\r\nclass Login extends Component{\r\n    render(){\r\n        const { user, SignOut, SignInWithGoogle} = this.props;\r\n        return (\r\n            <view>\r\n                { user ? <Text>\r\n                    Hello,  { user.displayName}</Text>: \r\n                    <Text>Please, Sign in</Text>\r\n                }\r\n                {\r\n                      user ? <Button onPress={SignOut} title='Sign Out' />\r\n                      : <Button onPress={SignInWithGoogle} title='Sign in With' />\r\n                }\r\n            </view>\r\n        )\r\n    }\r\n}\r\n\r\nconst firebaseAppAuth = firebaseApp.auth();\r\nconst providers = {\r\n    googleProvider: new firebase.auth.GoogleAuthProvider(),\r\n};\r\nexport default withFirebaseAuth({\r\n    providers,\r\n    firebaseAppAuth,\r\n})(Login);"]},"metadata":{},"sourceType":"module"}